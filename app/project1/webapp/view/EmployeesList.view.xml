<mvc:View
    controllerName="project1.controller.EmployeesList"
    xmlns:mvc="sap.ui.core.mvc"
    xmlns="sap.m"
	xmlns:p="sap.m.plugins"
    xmlns:f="sap.ui.layout.form"    
    xmlns:core="sap.ui.core">
    <Page
        id="page"
        title="{i18n>title}">
    <headerContent>
      <Button 
        id="addBtn1"
        text="Add"
        icon="sap-icon://add"
        press="onAddPress"
        visible="{= ${local>/roles} === 'Admin'}"/>     
    </headerContent>        
      <!-- <f:SimpleForm
          id="filterForm"
          layout="ResponsiveGridLayout"
          labelSpanXL="3" labelSpanL="3" labelSpanM="4" labelSpanS="12"
          adjustLabelSpan="false"
          emptySpanXL="4" emptySpanL="4" emptySpanM="0" emptySpanS="0"
          columnsXL="2" columnsL="2" columnsM="1">
          <Label id="rolesLB"
            text="Role Name" />               
          <Select id="rolesFilter"
            items="{
              path: 'rolesModel>/Roles'
            }"
            change="onFilterChange"
            editable="{
              parts: [
                { path: 'local>/roles' },
                { path: 'local>/isEdit' }
              ],
              formatter: '.isVisibleForAdminEditing'
            }"
            >
            <core:Item id="roleSelectItem" key="{rolesModel>ID}" text="{rolesModel>name}" />
          </Select>
            <Label id="departmentsLB"
            text="Department Name" />        
          <Select id="departmentsFilter"
            items="{
              path: 'departmentsModel>/Departments'
            }"
            editable="{
              parts: [
                { path: 'local>/roles' },
                { path: 'local>/isEdit' }
              ],
              formatter: '.isVisibleForAdminEditing'
            }"
            change="onFilterChange">
            <core:Item id="deparmentSelectItem" key="{departmentsModel>ID}" text="{departmentsModel>name}" />
          </Select>
      </f:SimpleForm> -->
        <Label id="Separator" ></Label> 
        <Table id="productsTable"
            items="{/Employees}">
            <columns>
                <Column id="idCol" width="12em" visible="false"><Text id="idText" text="ID" /></Column>
                <Column id="nameCol" width="12em"><Text id="nameText" text="Name" /></Column>
                <Column id="emailCol"       minScreenWidth="Tablet" demandPopin="true"><Text id="emailText" text="Email" /></Column>
                <Column id="rolesCol"       minScreenWidth="Tablet" demandPopin="true" hAlign="Center"><Text id="rolesText" text="Roles" /></Column>
                <Column id="departmentsCol" minScreenWidth="Tablet" demandPopin="true" hAlign="End"><Text id="departmentsText" text="Departments" /></Column>
            </columns>
            <items>
                <ColumnListItem id="_IDGenColumnListItem"
                    type="Active"
                    vAlign="Middle"
                    navigated="{
                            parts: [
                                'settings>/navigatedItem',
                                'ProductId'
                            ],
                            formatter: '.isNavigated'
                        }"
                    press="onPress">
                    <cells>
                        <Text id="ID" text="{ID}" visible="false"/>
                        <Text id="Name" text="{firstName} {lastName}" />
                        <Text id="Email" text="{email}" />
                        <Text id="Roles" text="{roles/name}" />
                        <Text id="Departments" text="{departments/name}" />
                    </cells>
                </ColumnListItem>
            </items>
        </Table>
    </Page>
</mvc:View>
